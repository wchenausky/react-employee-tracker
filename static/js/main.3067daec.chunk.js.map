{"version":3,"sources":["components/Jumbotron/index.jsx","components/TableHtml/index.jsx","components/SearchBar/index.jsx","utils/api.js","components/TableData/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","TableHtml","props","format","headings","rows","map","heading","scope","onClick","row","item","SearchBar","onChange","handleInputChange","value","name","type","placeholder","id","aria-label","aria-describedby","onSubmit","handleFormSubmit","axios","get","TableData","state","search","filteredUsers","backupRows","nameSort","componentDidMount","searchEmployee","API","then","employees","data","results","employee","src","picture","medium","alt","first","last","email","phone","Date","dob","date","getMonth","getDate","getFullYear","setState","catch","err","console","log","event","preventDefault","target","getAttribute","sortRows","filter","i","include","handleNameSort","innerHTML","sortedRows","sort","reverse","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3067daec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <h1 className=\"container\">Employee Directory</h1>\r\n      <p className=\"lead\">\r\n        A list of the current employees. Use the search box to narrow down your\r\n        results.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\n\r\nfunction TableHtml(props) {\r\nlet { format, headings, rows } = props;\r\n  return (\r\n      <table className={`table ${format || \"table-striped\"}`}>\r\n        <thead>\r\n          <tr>\r\n           {headings.map(heading => <th scope=\"col\" onClick={props.onClick}>{heading}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map(row => <tr>{row.map(item => <td>{item}</td>)}</tr>)}\r\n        </tbody>\r\n      </table>\r\n  );\r\n}\r\n\r\nexport default TableHtml;\r\n","import React from \"react\";\r\n\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"input-group mb-4\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search for an Employee\"\r\n          id=\"Search\"\r\n          aria-label=\"Sizing example input\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n        <br />\r\n        <button onSubmit={props.handleFormSubmit} className=\"btn btn-primary\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployee:function() {\r\n        return axios.get('https://randomuser.me/api/?results=50&inc=picture,name,email,phone,dob');\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport TableHtml from \"../TableHtml\";\r\nimport SearchBar from \"../SearchBar\"\r\nimport API from \"../../utils/api\";\r\n\r\n\r\nclass TableData extends Component {\r\n  state = {\r\n    rows: [[]],\r\n    headings: [\"Picture\", \"Name\", \"Email\", \"Phone\", \"DOB\"],\r\n    format: \"\",\r\n    search: \"\",\r\n    filteredUsers: [{}],\r\n    backupRows: [[]],\r\n    nameSort: 1,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.searchEmployee();\r\n  }\r\n\r\n  searchEmployee = () =>\r\n    API.getEmployee()\r\n      .then(employees => {\r\n        const rows = employees.data.results.map(employee => {\r\n          return [\r\n            <img\r\n              src={employee.picture.medium}\r\n              className=\"round-circle\"\r\n              alt={employee.name}\r\n            ></img>,\r\n            `${employee.name.first} ${employee.name.last}`,\r\n            employee.email,\r\n            employee.phone,\r\n            new Date(employee.dob.date).getMonth() +\r\n              1 +\r\n              \"/\" +\r\n              (new Date(employee.dob.date).getDate() +\r\n                \"/\" +\r\n                new Date(employee.dob.date).getFullYear())]\r\n        })\r\n        this.setState({\r\n          rows,\r\n          filteredUsers: employees.data,\r\n          backupRows: rows\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n\r\nhandleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const search = event.target.getAttribute(\"value\");\r\n    if (search === \"\") {\r\n        this.setState({ rows: this.state.backupRows });\r\n        return;\r\n    }\r\n    let sortRows = this.state.backupRows;\r\n    sortRows = sortRows.filter(i => { return i[1].include(search) });\r\n    this.setState({ rows: sortRows });\r\n    return;\r\n};\r\n\r\nhandleNameSort = (event) => {\r\n    event.preventDefault();\r\n    const headingName = event.target.innerHTML;\r\n    if (headingName === \"Name\") {\r\n        if (this.state.nameSort === 1) {\r\n            const currentRows = this.state.rows;\r\n            const sortedRows = currentRows.sort();\r\n            this.setState({ rows: sortedRows, nameSort: 2 });\r\n        } else {\r\n            const currentRows = this.state.rows;\r\n            const sortedRows = currentRows.reverse();\r\n            this.setState({ rows: sortedRows, nameSort: 1 });\r\n        }\r\n    }\r\n};\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <SearchBar\r\n            onSubmit={this.handleFormSubmit} \r\n            />  \r\n        <TableHtml\r\n     onSubmit={this.handleFormSubmit}\r\n     rows={this.state.rows}\r\n     headings={this.state.headings}\r\n          format={this.state.format}\r\n          onClick={this.handleNameSort}\r\n        />\r\n        </div>\r\n       \r\n)\r\n    };\r\n};\r\n\r\nexport default TableData;\r\n","import \"./App.css\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport TableData from \"./components/TableData\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron />\n      <TableData />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}